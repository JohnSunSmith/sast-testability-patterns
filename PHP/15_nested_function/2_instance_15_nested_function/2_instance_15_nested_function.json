{
    "description": "This instance defines a function within another function. The sink is moved out of the inner function to provide the standard skeleton. Why does this make a difference for some SAST tools?",
    "code": {
        "path": "./2_instance_15_nested_function.php",
        "injection_skeleton_broken": false
    },
    "discovery": {
        "rule": "../15_nested_function.sc",
        "method": "joern",
        "rule_accuracy": "Perfect",
        "notes": "The rule searches for `DECLARE_FUNCTION`."
    },
    "compile": {
        "binary": "./2_instance_15_nested_function.bash",
        "instruction": null,
        "dependencies": null
    },
    "expectation": {
        "type": "xss",
        "sink_file": "./2_instance_15_nested_function.php",
        "sink_line": 10,
        "source_file": "./2_instance_15_nested_function.php",
        "source_line": 7,
        "expectation": true
    },
    "properties": {
        "category": "S0",
        "feature_vs_internal_api": "FEATURE",
        "input_sanitizer": false,
        "source_and_sink": false,
        "negative_test_case": false
    },
    "remediation": {
        "notes": "If possible, the inner function should be declared outside of the scope of the outer function. Are there any performance related or other issues with that? If not, this could be automated.",
        "transformation": null,
        "modeling_rule": null
    }
}