{
    "description": "The instance shows, that when you call `echo` on an object, the `to_string` method of that object will be called.",
    "code": {
        "path": "./1_instance_43_tostring_echo_object.php",
        "injection_skeleton_broken": false
    },
    "discovery": {
        "rule": "./1_instance_43_tostring_echo_object.sc",
        "method": "joern",
        "rule_accuracy": "FP",
        "notes": "The discovery rule first gets all class names, where the method `__toString` is defined.\nAfterwards it collects all `NEW` calles and filters them to see which of the instanciated objects has the method `__toString` defined.\nThe rule would be perfect, if we could additionally check, if one of the created objects invokes the `__toString` method within its lifetime."
    },
    "compile": {
        "binary": "./1_instance_43_tostring_echo_object.bash",
        "instruction": null,
        "dependencies": null
    },
    "expectation": {
        "type": "xss",
        "sink_file": "./1_instance_43_tostring_echo_object.php",
        "sink_line": 16,
        "source_file": "./1_instance_43_tostring_echo_object.php",
        "source_line": 13,
        "expectation": true
    },
    "properties": {
        "category": "S0",
        "feature_vs_internal_api": "FEATURE",
        "input_sanitizer": false,
        "source_and_sink": false,
        "negative_test_case": false
    },
    "remediation": {
        "notes": "If that is a problem, is it easier for a SAST tool, to call `__toString` manually before passing it to `echo`?",
        "transformation": null,
        "modeling_rule": null
    }
}